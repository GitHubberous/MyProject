/* --------------------------------------------------------------- Crib --- */ 
/*

-webkit- (Safari 5.1-6)
-o- (Opera 11.1-12)
-moz- (Fx 3.6-15)

Чтобы при задании размера div в % его padding и border являлись частью div,
 нужно приписать правило box-sizing: border-box;

Чтобы при задании div float: left; корректно отображаля родительский элемент, 
 у родителя прописываем правило overflow: auto; или добавить в родителя элемент с clear:both;

Чтобы первый и последний элементы не имели padding надо использовать :first-child и :last-child
 
Для удобно позиционирования элемента по центру применяем left: calc(50% - Npx);

Чтобы при position: absolute; элемент располагался относительно родителя,
 у родителя должно быть правило position: absolute | fixed | relative;

Если хотим чтобы элемент занимал свое место и позиционировался относительно своего начельного местоположения, задаем position: relative;, а если хотим чтобы элемент накладывался на кнтент и позиционировался относительно окна браузера или родителя (см.выше) position: absolute;

Чтобы img не уезжало за div добавляем к img width: 100%;

Чтобы ссылки или заголовки были ровно той ширины сколько занимае текст нужно правило width: fit-content;

<div><a href=""></a></div> Чтобы выровнять элемент по вертикали нужно диву задать display: table;, а ссылке display: table-cell;.

Чтобы назначить несколько картинок фоном нужно просто указать их через запятую, задние пишем в конце.

Z-index  воспринимают элементы только с position: relative, absolute и т.д.;  на всем кроме static.

Строчные элементы не реагируют на размеры если не задать им position: absolute;

a:hover::before писать можно, но a::before:hover не сработает;

Можно задавать множественные фоны, baground-image: и Url через запятую;

flex-wrap: wrap; - разрешает перенос флекс элементов на строку.

Двух цветные фоны можно хадавать через градиенты.

Если вы хотите чтобы все ваши пробелы и переводы строк отображались как в исходном HTML, то вам необходимо использовать тег pre. Или правило white-space: ;

*/